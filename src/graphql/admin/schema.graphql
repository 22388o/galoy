type Query {
  allLevels: [AccountLevel!]!
  userDetailsByPhone(phone: Phone!): MerchantUser!
  userDetailsByUsername(username: WalletName!): MerchantUser!
}

enum AccountLevel {
  ONE
  TWO
}

type MerchantUser {
  id: ID!
  phone: Phone!
  language: Language!
  level: AccountLevel
  status: AccountStatus
  createdAt: Timestamp!
  title: String
  coordinates: Coordinates
}

"""
Phone number which includes country code
"""
scalar Phone

enum Language {
  EN_US
  ES_SV
}

enum AccountStatus {
  LOCKED
  ACTIVE
}

"""
Date field, serialized as the number of milliseconds since the Unix Epoch
"""
scalar Timestamp

type Coordinates {
  longitude: Float!
  latitude: Float!
}

"""
Unique identifier of an account wallet
"""
scalar WalletName

type Mutation {
  userRequestAuthCode(input: UserRequestAuthCodeInput!): SuccessPayload!
  userLogin(input: UserLoginInput!): AuthTokenPayload!
  userUpdateStatus(input: UserUpdateStatusInput!): UserDetailPayload!
  userUpdateLevel(input: UserUpdateLevelInput!): UserDetailPayload!
  businessUpdateMapInfo(input: BusinessUpdateMapInfoInput!): UserDetailPayload!
}

type SuccessPayload {
  errors: [Error!]!
  success: Boolean
}

interface Error {
  message: String!
  path: [String]
}

input UserRequestAuthCodeInput {
  phone: Phone!
}

type AuthTokenPayload {
  errors: [Error!]!
  authToken: AuthToken
}

"""
An authentication code valid for a single use
"""
scalar AuthToken

input UserLoginInput {
  phone: Phone!
  code: OneTimeAuthCode!
}

"""
An authentication code valid for a single use
"""
scalar OneTimeAuthCode

type UserDetailPayload {
  errors: [Error!]!
  userDetails: MerchantUser
}

input UserUpdateStatusInput {
  uid: ID!
  status: AccountStatus!
}

input UserUpdateLevelInput {
  uid: ID!
  level: AccountLevel!
}

input BusinessUpdateMapInfoInput {
  walletName: WalletName!
  title: String!
  longitude: Float!
  latitude: Float!
}
